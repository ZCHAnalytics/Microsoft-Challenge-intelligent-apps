## AKS deployment pipeline with GitHub Actions
Scenario:  A video production company migrated its technology stack to AKS. To reduce time and effort building container images and deploying applications, we investigate using pipelines to deploy AKS workloads.

I need to design a pipeline that needs to trigger on two different events: 1) a tagged push to the main branch (to production) and 2) a non-tagged push to the main branch (to staging environment).

0. Set up Project Environment:
In the terminal, clone the GitHub Repo and inside it, run the init.sh file. 
I  modified the template to ensure all resources are created int he same region as first they were created in West Europe and East US.  

Check the results: 
`az group list -o table` 
`az acr list -o table`

Environmental variables - GitHub Secrets for Actions
`$ az acr list --query "[?contains(resourceGroup, 'mslearn-gh-pipelines')].loginServer" -o table`

We create a new workflow in GitHub Actions, using templates from the marketplaces for designing steps - checkout, login. etc and commit changes.
This run will fail because no variables have been set in GitHub Secrets yet. 

Adding GitHub Secrets: 
Re-run did not work the first time due to older versions of node.js and nginx specified in the dockerfile. I changed the versions to latest and it worked! 

We create  GitHub Actions staging pipeline by building the application image and pushing it to Azure Container Registry.
https://learn.microsoft.com/en-us/training/modules/aks-deployment-pipeline-github-actions/media/3-pipeline-5-deploy.png

Build-production.yml


trigger tag event - git pull
git tag -a v2.0.0 -m 'My first tag'
git push --tags
