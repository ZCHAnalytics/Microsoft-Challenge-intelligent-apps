## AKS deployment pipeline with GitHub Actions
Scenario:  A video production company migrated its technology stack to AKS. To reduce time and effort building container images and deploying applications, we investigate using pipelines to deploy AKS workloads.

I need to design a pipeline that needs to trigger on two different events: 1) a tagged push to the main branch (to production) and 2) a non-tagged push to the main branch (to staging environment).
clone repo > build image > push to acr > deploy app > 

### 0. Set up Project Environment:
In the terminal, clone the GitHub Repo and inside it, run the init.sh file. 
The bash file did not specify the regions for all resources and also had both json and tsv for output flags. in sed commands it also had empty strings. So at first attempt, the resources were created across different in regions. Also, DNS zone were not created. 
I also changed the export of the DNS variable:
export DNS_NAME=$(az aks show -g $RESOURCE_GROUP_NAME -n $AKS_NAME --query addonProfiles.httpApplicationRouting.config.HTTPApplicationRoutingZoneName -o tsv)
DNS_NAME variable was not given a value.

The Dockerfile needed to be updated as well as nginx, node.js and hugo versions were out of date.

OLD: `export DNS_NAME=$(az network dns zone list -o json --query "[?contains(resourceGroup,'$RESOURCE_GROUP_NAME')].name" -o tsv)`
Edited: `export DNS_NAME=$(az network dns zone list --query "[?contains(resourceGroup,'$RESOURCE_GROUP_NAME')].name" -o tsv)`
I got these outputs which i will use as variable but these resources will be deleted after the exercise is deleted. 
As kubernetes yaml files have not been yet created, the sed commands could not be executed:
`sed: can't read kubernetes/deployment.yaml: No such file or directory
sed: can't read kubernetes/ingress.yaml: No such file or directory

Checking the results with `az group list -o table` shows that all resources are now in the same region and status is 'succeeded'. The command `az acr list -o table` shows that Azure Container Registry has also been created. 

$ az group list -o table
Name                                                 Location    Status
---------------------------------------------------  ----------  ---------
NetworkWatcherRG                                     uksouth     Succeeded
mslearn-gh-pipelines-19117                           uksouth     Succeeded
MC_mslearn-gh-pipelines-19117_contoso-video_uksouth  uksouth     Succeeded
cloud-shell-storage-westeurope                       westeurope  Succeeded

$ az acr list -o table
NAME                           RESOURCE GROUP              LOCATION    SKU    LOGIN SERVER                              CREATION DATE         ADMIN ENABLED
-----------------------------  --------------------------  ----------  -----  ----------------------------------------  --------------------  ---------------
contosocontainerregistry29748  mslearn-gh-pipelines-19117  uksouth     Basic  contosocontainerregistry29748.azurecr.io  2024-04-03T19:15:37Z  True

### 1. Design staging pipeline
Now we create a pipeline by adding a new GitHub Actions workflow with file `build-staging.yml` and commit changes. The run failed because we haven't set up environmental variables as secrets in GitHub Actions yet.

Environmental variables - GitHub Secrets for Actions
`$ az acr list --query "[?contains(resourceGroup, 'mslearn-gh-pipelines')].loginServer" -o table`

We create a new workflow in GitHub Actions, using templates from the marketplaces for designing steps - checkout, login. etc and commit changes.
This run will fail because no variables have been set in GitHub Secrets yet. 

Adding GitHub Secrets: 

We create  GitHub Actions staging pipeline by building the application image and pushing it to Azure Container Registry.
https://learn.microsoft.com/en-us/training/modules/aks-deployment-pipeline-github-actions/media/3-pipeline-5-deploy.png

Build-production.yml


trigger tag event - git pull
git tag -a v2.0.0 -m 'My first tag'
git push --tags
